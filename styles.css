/* ======
 * Global/generic styles
 */

:root {
	/* can set global values here to use in other declarations */
	--gray: #ccc;
	--light-gray: #ddd;
	--red: #a00;
	--green: #67ae00;
	--default-shadow: rgba(0, 0, 0, 0.25);
	--default-duration: 0.3s;
}

*, *::before, *::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
body {
	background-image: url('img/playstation.png');
	font-family: -apple-system, BlinkMacSystemFont, Roboto, sans-serif;
}
nav ul,
nav li {
	list-style: none; /* we don't want our nav menu to have bullet points */
}
nav a {
	position: relative; /* need this for containing our ::after pseudo-element */
	color: inherit; /* override browser default */
	text-decoration: none; /* override browser default */
}
nav a::after {
	content: ""; /* a content value must be set or the element won't exist */
	position: absolute;
	bottom: 0;
	left: 0;
	width: 0; /* start here, will extend on hover */
	height: 2px;
	background: var(--red);
	transition: width var(--default-duration);
}
nav a:hover::after {
	width: 100%;
}
h2 {
	display: flex; /* with ::before and ::after, a tricky way to put lines on either side of the heading text */
	align-items: center;
}
h2::before,
h2::after {
	content: "";
	flex: 1;
	height: 1px;
	background: var(--gray);
	margin: 0 1rem;
}

/* ======
 * Container styles
 */

.page-wrapper {
	display: flex;
	flex-direction: column;
	max-width: 50rem;
	min-height: 100vh;
	margin: 0 auto;
	background: white;
	box-shadow: 0 2px 8px var(--default-shadow);
}
.page-body {
	flex: 1; /* because of page-wrapper's min-height 100vh, this will expand to fill viewport height */
	padding: 2rem 3rem;
}

/* ======
 * Header styles
 */

.page-header {
	flex: 0;
	display: flex; /* this is both a flex item (child of page-wrapper) and a flex container itself */
	align-items: center;
	padding: 1rem 2.5rem;
	border-bottom: 1px solid var(--light-gray);
	box-shadow: 0 2px 4px -2px var(--default-shadow);
}
.page-title {
	display: inline-block;
	margin: 0 1rem;
	font-weight: bold;
}
.page-navigation {
	margin-left: auto; /* will push the navigation all the way right */
}
.page-navigation ul {
	display: flex; /* makes the list items display horizontally */
	justify-content: flex-end;
}
.page-navigation a {
	display: inline-block;
	margin-left: 2rem;
	padding-bottom: 0.25em;
}

/* ======
 * To-do list styles
 */

.list-settings {
	margin: 0 0 1rem;
	text-align: center;
}
.list-settings select {
	font: inherit;
}
.todo {
	display: flex;
	list-style: none;
	margin: 0 1rem;
	padding: 1rem;
	border-bottom: 1px dashed var(--gray);
}
.todo.is-done {
	background: var(--light-gray);
	color: #777;
}
.todo .done-toggler {
	width: 2rem;
	cursor: pointer;
}
.todo .description {
	flex: 1;
	padding: 0.25rem 1rem;
}
.todo.is-done .description {
	text-decoration: line-through;
	font-style: italic;
}
.todo .delete-button {
	padding: 0.25rem 0.5rem;
	border: 0;
	border-radius: 0.25rem;
	background: transparent;
	color: var(--red);
	font-family: inherit;
	font-size: 0.75rem;
	cursor: pointer;
	transition: background-color var(--default-duration);
}
.todo .delete-button:hover,
.todo .delete-button:focus {
	background-color: var(--light-gray);
}

/* ======
 * Footer styles
 */

.site-footer {
	flex: 0;
	background: #222a44;
	color: white;
	padding: 1.5rem;
}

/* ======
 * To-do form styles
 */

.todo-form {
	display: flex;
	flex-wrap: wrap;
}
.todo-form input[type="text"] {
	display: inline-block;
	flex: 1;
	height: 3rem;
	border: 0;
	padding: 0 1rem;
	font: inherit;
	border-top-left-radius: 0.5rem;
	border-bottom-left-radius: 0.5rem;
}
.todo-form.has-error input[type="text"] {
	box-shadow: inset 0 0 0.5rem var(--red);
}
.todo-form [type="submit"] {
	width: 10rem;
	height: 3rem;
	border-top-right-radius: 0.5rem;
	border-bottom-right-radius: 0.5rem;
	border: 0;
	background: var(--green);
	color: white;
	font: inherit;
	font-weight: bold;
	cursor: pointer;
	transition: background-color var(--default-duration);
}
.todo-form [type="submit"]:hover,
.todo-form [type="submit"]:focus {
	background-color: #70bd00;
}
.todo-form .validation-message {
	flex: 0 0 100%; /* will mean this is always full-width of its parent container */
}
.todo-form.has-error .validation-message {
	padding-top: 0.5rem;
	color: pink;
}

/* ======
 * Flash message styles
 */

.flash-message {
	position: fixed; /* anchors the element directly to the viewport, regardless of its position in the DOM */
	top: 1rem;
	left: 1rem;
	right: 1rem;
	padding: 1rem 2rem;
	border-radius: 0.5rem;
	background: var(--green);
	color: white;
	text-align: center;
	animation-name: flash;
	animation-duration: 3s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: 1;
	animation-fill-mode: forwards;
}

@keyframes flash {
	0% {
		opacity: 0;
	}
	10% {
		opacity: 1;
	}
	67% {
		transform: translateX(0);
	}
	75% {
		transform: translateX(-8%);
	}
	100% {
		transform: translateX(200%);
	}
}
